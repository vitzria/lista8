/******
Faça uma função que receba, por parâmetro, duas matrizes quadradas de ordem N, A e B, e
retorna uma matriz C, também por parâmetro, que seja o produto matricial de A e B.
******/
#include <stdio.h>
#include <stdlib.h>
int somaMatriz(int **m1, int **m2, int **m3, int a, int b){
int i, j;
m3=(int**)malloc(a*sizeof(int*));
if(m3==NULL){
    printf("\nMemoria insuficiente!");
    exit(1);
}
    for(i=0;i<a;i++){
    m3[i]=(int*)malloc(b*sizeof(int));
    if(m3[i]==NULL){
        printf("\nMemoria insuficiente!");
        exit(1);
    }
        for(j=0;j<b;j++){
            m3[i][j]=(m1[i][j])+(m2[i][j]);
        }
    }
    for(i=0;i<a;i++){
        for(j=0;j<b;j++){
            printf("\t%d" , m3[i][j]);
        }
    }
return 0;
}
int main()
{
    int **m1, **m2, **m3, a, b, i, j;
    printf("Digite a ordem da matriz quadrada 1: ");
    scanf("%d" , &a);
    printf("\nDigite a ordem da matriz quadrada 2: ");
    scanf("%d" , &b);

    if(a!=b){
        printf("\nNao eh possivel somar as matrizes!");
        exit(1);
    }
    else{
    m1=(int**)malloc(a*sizeof(int*));
    if(m1==NULL){
        printf("\nMemoria insuficiente");
        exit(1);
    }
    printf("\nMATRIZ 1\n");
    for(i=0;i<a;i++){
        m1[i]=(int*)malloc(a*sizeof(int));
        if(m1==NULL){
            printf("\nMemoria insuficiente");
            exit(1);
        }
        for(j=0;j<a;j++){
            printf("\nDigite o valor %d %d: " , i+1, j+1);
            scanf("%d" , &m1[i][j]);
        }
    }

    m2=(int**)malloc(b*sizeof(int*));
    if(m2==NULL){
        printf("\nMemoria insuficiente");
        exit(1);
    }
    printf("\nMATRIZ 2\n");
    for(i=0;i<b;i++){
        m2[i]=(int*)malloc(b*sizeof(int));
        if(m2==NULL){
            printf("\nMemoria insuficiente");
            exit(1);
        }
        for(j=0;j<b;j++){
            printf("\nDigite o valor %d %d: " , i+1, j+1);
            scanf("%d" , &m2[i][j]);
        }
    }
    printf("\nSOMA DAS MATRIZES\n");
    somaMatriz(m1, m2, m3, a, b);
    }
return 0;
}
